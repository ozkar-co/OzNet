# Nginx configuration for OzNet
# This file should be placed in /etc/nginx/sites-available/oznet

# OctoPrint configuration - HTTP only, redirect HTTPS to HTTP
server {
    listen 443 ssl;
    http2 on;
    server_name 3dprint.oznet;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/oznet/cert.pem;
    ssl_certificate_key /etc/ssl/oznet/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Redirect HTTPS to HTTP
    return 301 http://$server_name$request_uri;
}

# OctoPrint configuration - HTTP only
server {
    listen 80;
    server_name 3dprint.oznet;
    
    # Proxy to OctoPrint (running on the same server)
    location / {
        proxy_pass http://172.26.0.1:5000;
        proxy_http_version 1.1;
        
        # Critical headers for OctoPrint reverse proxy
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Scheme http;
        proxy_set_header X-Script-Name /;
        
        # Additional settings
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        client_max_body_size 0;
        
        # Disable redirects to prevent loops
        proxy_redirect off;
    }
    
    # WebSocket support for OctoPrint
    location /sockjs/ {
        proxy_pass http://172.26.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Scheme http;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Main OzNet services (excluding 3dprint)
server {
    listen 80;
    server_name home.oznet hub.oznet files.oznet server.oznet mail.oznet wiki.oznet;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name home.oznet hub.oznet files.oznet server.oznet mail.oznet wiki.oznet;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/oznet/cert.pem;
    ssl_certificate_key /etc/ssl/oznet/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Proxy to Express.js server
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
    
    # Static files (optional)
    location /static/ {
        alias /var/oznet/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=oznet:10m rate=10r/s;